import { motion } from 'framer-motion';
import React from "react";
import { SpotType } from '../data/allSpots'; 

interface Lane_Props {
  renderSpot: (
    id: string,
    d: string,
    type: SpotType,
    latestSpot: string | undefined,
    title?: string
  ) => React.JSX.Element;
  latestSpot: string | undefined;
}

export default function Lane({
  renderSpot,
  latestSpot,
}: Lane_Props) {
  const dMap: Record<string, { d: string; type: SpotType; title?: string }> = {
 		HALLWAY: {
      d: 'M458.08 475.77h181.81v19.62h-181.81z',
      type: 'orange',
      title: 'HALLWAY',
    },	
	};

  const nonSelectedSpots = Object.keys(dMap).filter(
    (id) => id !== latestSpot
  );

  return (
    <>
      {/* Base boundary */}
			<g id="LANE_L1_Base" fill="#f0ead2">
				<polygon
					points="
						837.47 206.63 837.47 161.19 837.47 161.19 837.47 130.01 
						352.54 130.01 352.54 161.19 321.46 161.19 321.46 550.22 
						638.43 550.22 638.43 587.74 738.3 587.74 738.3 550.22 
						837.47 550.22 837.47 373.06 852.58 373.06 852.58 424.58 
						873.08 424.58 873.08 373.06 873.08 258.16 873.08 206.63 
						837.47 206.63
					"
					stroke="#6c584c"
					strokeWidth={1}
				/>
			</g>


      {/* Gray rooms */}
			<motion.g
        id="GrayRooms"
        initial={{ opacity: 0, scale: 0.98 }}
        animate={{ opacity: 1, scale: 1 }}
        transition={{ delay: 0.2, duration: 0.4 }}
      >
        {/* Insert your gray room paths or rects here */}
				<g id="LANE_Gray" fill="#c2c1c0">
					<rect id="_109" x="360.47" y="139.55" width="279.41" height="273.47"><title>109</title></rect>
					<polygon id="_100" points="643.27 139.55 643.27 289.44 643.27 307.99 643.27 413.02 827.48 413.02 827.48 307.99 827.48 289.44 827.48 139.55 643.27 139.55"><title>100</title></polygon>
					<rect id="_101" x="735.66" y="475.77" width="91.82" height="69.36"><title>101</title></rect>
					<rect id="stari2" x="735.66" y="422.93" width="91.82" height="48.22"><title>stari2</title></rect>
					<rect id="stair3" x="854.19" y="373.09" width="17.13" height="49.84"><title>stair3</title></rect>
					<rect id="stair1" x="360.47" y="425.2" width="122.48" height="43.69"><title>stair1</title></rect>
					<rect id="_108" x="487.3" y="425.19" width="53.43" height="43.69"><title>108</title></rect>
					<rect id="_102" x="543.84" y="425.19" width="96.04" height="43.69"><title>102</title></rect>
					<rect id="_105" x="360.47" y="475.77" width="93.24" height="69.36"><title>105</title></rect>
					<rect id="_104" x="458.08" y="499.28" width="40.72" height="45.85"><title>104</title></rect>
					<rect id="_103" x="503.12" y="499.28" width="136.77" height="45.85"><title>103</title></rect>
				</g>

			</motion.g>

			{/* Green interactive spots */}
			<motion.g
        id="GreenSpots"
        initial={{ opacity: 0, scale: 0.95 }}
        animate={{ opacity: 1, scale: 1 }}
        transition={{ delay: 0.5, duration: 0.4 }}
      >
        {nonSelectedSpots.map((id) => {
          const { d, type, title } = dMap[id];
          return renderSpot(id, d, type, latestSpot, title);
        })}			
			</motion.g>


      {/* Decorative Elements */}
			<motion.g
        id="Decorations"
        initial={{ opacity: 0, y: 10 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.8, duration: 0.4 }}
      >
				<g id="Decorations" stroke="#545554" fill="none">

					{/* --- Stair1 --- */}
					<g id="Stair1" stroke="#545554" fill="none">
						<rect x="376.03" y="428.07" width="91.36" height="37.96" />
						{[390.21, 398.03, 405.85, 413.68, 421.5, 429.32, 437.14, 444.97, 452.79].map((x, i) => (
							<line key={`stair1-line-${i}`} x1={x} y1={427.86} x2={x} y2={465.82} />
						))}
						<g>
							<line x1={388.85} y1={439.76} x2={464.24} y2={439.76} />
							<polygon points="377.92 439.73 388.85 434.26 388.85 445.19 377.92 439.73" />
						</g>
						<g>
							<line x1={454.88} y1={457.74} x2={379.49} y2={457.74} />
							<polygon points="465.81 457.7 454.88 452.24 454.88 463.17 465.81 457.7" />
						</g>
					</g>

					{/* --- Stair1-2 --- */}
					<g id="Stair1-2" stroke="#545554" fill="none">
						<rect x="738.22" y="429.03" width="86.7" height="36.03" />
						{[751.67, 759.1, 766.52, 773.95, 781.37, 788.8, 796.22, 803.64, 811.07].map((x, i) => (
							<line key={`stair1-2-line-${i}`} x1={x} y1={428.83} x2={x} y2={464.86} />
						))}
						<g>
							<line x1={750.38} y1={440.12} x2={821.94} y2={440.12} />
							<polygon points="740.02 440.09 750.38 434.91 750.38 445.28 740.02 440.09" />
						</g>
						<g>
							<line x1={813.05} y1={457.19} x2={741.5} y2={457.19} />
							<polygon points="823.42 457.16 813.05 451.97 813.05 462.34 823.42 457.16" />
						</g>
					</g>

					{/* --- Stair1-3 --- */}
					<g id="Stair1-3" stroke="#545554" fill="none">
						<rect x="846.39" y="393.18" width="32.81" height="13.63" transform="translate(462.79 1262.79) rotate(-90)" />
						{[411.31, 408.5, 405.7, 402.89, 400.08, 397.27, 394.46, 391.65, 388.84].map((y, i) => (
							<line key={`stair1-3-line-${i}`} x1={855.9} y1={y} x2={869.54} y2={y} />
						))}
						<g>
							<line x1={860.18} y1={411.8} x2={860.18} y2={384.72} />
							<polygon points="860.16 415.73 858.2 411.8 862.13 411.8 860.16 415.73" />
						</g>
						<g>
							<line x1={866.63} y1={388.08} x2={866.63} y2={415.16} />
							<polygon points="866.62 384.16 864.66 388.08 868.58 388.08 866.62 384.16" />
						</g>
					</g>
					
					{/* --- Bathroom1 --- */}
					<g id="Bathroom1" stroke="#545554" fill="none">
						<path d="M471.2,524.99c-.48,0-.94,0-1.4,0-1.58-.02-2.97-1.39-3.03-2.96-.02-.53.09-.65.61-.66.74,0,1.48,0,2.23,0,.02,0,.04-.01.14-.03-1.82-1.27-2.89-2.97-2.96-5.21-.08-2.23.8-4.03,2.54-5.38,2.49-1.92,6.17-1.57,8.3.78,1.33,1.47,1.88,3.21,1.64,5.19-.25,1.98-1.27,3.48-2.86,4.66.68,0,1.36.02,2.04,0,.86-.03.99.14.81,1.04-.31,1.56-1.56,2.57-3.12,2.58-.41,0-.83,0-1.26,0,.1,1.1.18,2.15.28,3.2.12,1.38.25,2.77.38,4.15.05.5.1,1,.13,1.5.01.22.09.29.3.29.88,0,1.75,0,2.63,0,1.36,0,2.72,0,4.08,0,.11,0,.22,0,.35-.02.21-1.31.41-2.6.64-3.89.05-.26-.13-.28-.26-.36-1.41-.87-2.2-2.14-2.23-3.81-.01-.51.06-1.01,0-1.53-.07-.62.38-1.09,1.1-1.33-.19-.28-.39-.56-.56-.84-.38-.61-.55-1.29-.56-2.01,0-1,0-2.01,0-3.01,0-.86.54-1.42,1.38-1.42,2.08,0,4.16,0,6.24,0,.77,0,1.32.55,1.33,1.33.01,1.04,0,2.07,0,3.11,0,1-.35,1.87-.97,2.63-.05.06-.09.12-.14.19.21.11.42.19.6.32.48.36.64,1,.42,1.6-.04.1-.09.23-.06.31.28.53.15,1.07.03,1.6-.3,1.27-1.03,2.24-2.15,2.89-.2.12-.26.24-.23.46.2,1.15.41,2.31.58,3.47.04.29.16.34.41.34.61-.01,1.21-.02,1.82,0,.17,0,.37.06.48.17.23.22.08.62-.23.69-.11.02-.22.02-.33.02-7.89,0-15.78,0-23.67,0-.15,0-.32.04-.43-.03-.15-.08-.32-.23-.36-.38-.05-.21.07-.4.31-.45.13-.02.27-.04.4-.04,1.16,0,2.32,0,3.47,0,.25,0,.34-.05.37-.33.23-2.65.48-5.31.71-7.96.02-.26.03-.52.05-.85Z M472.59,521.3c0-.16,0-.3,0-.45.01-.9-.02-1.8.05-2.7.06-.82.8-1.4,1.62-1.35.78.04,1.43.71,1.46,1.52,0,.22,0,.43,0,.65,0,.34-.17.54-.43.54-.27,0-.42-.19-.43-.53,0-.26,0-.53-.05-.78-.06-.31-.38-.53-.67-.52-.32.02-.59.27-.64.59-.02.11-.02.23-.02.34,0,.8,0,1.6,0,2.39,0,.1.02.19.03.32.2-.05.45.08.44-.28-.01-.29.06-.56.42-.58.35-.02.43.23.47.5,0,.02.03.03.04.05,2.11-.69,3.99-3.12,3.49-6.07-.45-2.67-2.84-4.71-5.74-4.54-2.51.15-4.75,2.3-4.98,4.99-.26,2.94,1.76,5.08,3.57,5.62.05-.27.12-.56.48-.54.55.02.35.53.48.84h.41Z M485.62,516.78c-.99,0-1.98,0-2.96,0-.49,0-.65.15-.65.65,0,.84.03,1.69,0,2.53-.06,1.29.48,2.28,1.42,3.09.09.08.24.13.36.13,1.07,0,2.13-.03,3.2.02.55.02.92-.15,1.28-.55.64-.7,1-1.49.99-2.46-.01-.93,0-1.87,0-2.8,0-.44-.16-.6-.58-.6-1.01,0-2.02,0-3.03,0Z M472.09,525.01c-.27,3.05-.54,6.07-.81,9.08h3.53c-.27-3.04-.54-6.05-.82-9.08h-1.9Z M489.25,525.94c-.08-.03-.1-.05-.12-.05-2.29,0-4.58,0-6.87,0-.23,0-.25.12-.23.3.24,2.69,3.08,4.23,5.39,2.89,1.18-.68,1.77-1.76,1.83-3.14Z M467.68,522.27c.04.15.07.29.12.4.42.97,1.18,1.43,2.21,1.44,1.47,0,2.94.02,4.41.01.74,0,1.48.01,2.22-.08.88-.11,1.66-.95,1.73-1.77h-10.68Z M487.36,534.09c-.21-1.27-.41-2.51-.61-3.7h-2.24c-.2,1.2-.4,2.44-.6,3.7h3.45Z M485.64,525.01c.48,0,.97,0,1.45,0,.56,0,1.12,0,1.68,0,.28,0,.44-.17.46-.45.01-.26-.13-.43-.39-.47-.13-.02-.27-.03-.4-.03-.8,0-1.59,0-2.39,0-1.13,0-2.26,0-3.39,0-.41,0-.65.19-.64.49,0,.28.24.46.63.46,1,0,2,0,3,0Z" />
						<title>Bathroom1</title>
					</g>
				</g>
			</motion.g>

			{/* --- Dashed Navigation Paths --- */}
			<motion.g
        id="Level2_Path"
        stroke="#545554"
        strokeWidth={1}
        strokeDasharray="10 6"
				fill="none"
        opacity={0.65}
        initial={{ strokeDashoffset: 80, opacity: 0 }}
				animate={{ strokeDashoffset: 0, opacity: 1 }}
				transition={{ delay: 1.2, duration: 1.2, ease: 'easeInOut' }}
      >
				<line x1="669.5" y1="610.74" x2="669.5" y2="424.03" />
				<polyline points="473.04 485.58 669.5 485.58 669.5 501.97" />
				<line x1="669.5" y1="457.74" x2="716.95" y2="457.74" />
			</motion.g>

			
      {latestSpot && dMap[latestSpot] && (() => {
        const { d, type, title } = dMap[latestSpot];
        return renderSpot(latestSpot, d, type, latestSpot, title);
      })()}
    </>
  );
}
