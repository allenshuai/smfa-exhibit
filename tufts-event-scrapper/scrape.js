const axios = require("axios");
const cheerio = require("cheerio");
const fs = require("fs");

const BASE_URL = "https://artgalleries.tufts.edu";
const EVENTS_URL = `${BASE_URL}/events`;

// Map readable room names to internal spot IDs
const locationToSpotId = {
  "Grossman Gallery": "GrossmanGalleryB101",
  "Anderson Auditorium": "AndersonAuditoriumB105",
  // "Remis Sculpture Court": "M201", // not implemented yet
  // "Aidekman Arts Center": "M202", // not implemented yet
};

// Only include spot IDs you've built frontend support for
const implementedSpotIds = new Set(["GrossmanGalleryB101", "AndersonAuditoriumB105"]);

async function scrapeEvents() {
  const res = await axios.get(EVENTS_URL);
  const $ = cheerio.load(res.data);

  const upcomingSection = $('.program-grid__title:contains("Upcoming")').closest(".program-grid");
  const eventCards = upcomingSection.find(".program-grid-card__inner");

  const output = {};

  eventCards.each((_, el) => {
    const $el = $(el);
    const href = $el.attr("href");
    const title = $el.find(".program-grid-card__title").text().trim();
    const date = $el.find(".program-grid-card__dates").text().trim();
    const location = $el.find(".program-grid-card__location").text().trim();
    const img = $el.find("img").attr("src")?.split("?")[0] ?? "";
    const fullUrl = `${BASE_URL}${href}`;

    const spotIds = Object.entries(locationToSpotId)
      .filter(([roomName]) => location.includes(roomName))
      .map(([, spotId]) => spotId)
      .filter((id) => implementedSpotIds.has(id)); // skip unimplemented rooms

    if (spotIds.length === 0) return;

    const eventData = {
      title,
      dateRange: date,
      location,
      imageUrl: img,
      readMoreUrl: fullUrl,
    };

    spotIds.forEach((spotId) => {
      if (!output[spotId]) output[spotId] = [];
      output[spotId].push(eventData);
    });
  });

  const fileContent = `// Auto-generated by scraper
export interface SpecialEventCardProps {
  title: string;
  dateRange: string;
  imageUrl: string;
  readMoreUrl?: string;
  location: string;
}

export const specialSpots: Record<string, SpecialEventCardProps[]> = ${JSON.stringify(
    output,
    null,
    2
  )};
`;

  fs.writeFileSync("specialSpots.generated.ts", fileContent, "utf-8");
  console.log("✅ specialSpots.generated.ts created successfully!");
}

scrapeEvents().catch((err) => console.error("❌ Error scraping:", err));
